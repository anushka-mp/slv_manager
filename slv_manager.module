<?php

/**
 * @file
 */
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Url;
use Drupal\user\UserInterface;
use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;

function slv_manager_user_login(UserInterface $account) {
  // We want to redirect user on login.
  // Check if the first login or not.
  if(!$account->hasPermission('administer voter entity')) {
    $entity = slv_manager_load_voter_by_nic($account->get('field_nic_number')->getValue()[0]);
    $role = $entity->get('role')->getValue()[0]['value'];
    if (!$account->hasRole($role)) {
      $account->addRole($role);
      $account->save();
    }
    if ($account->getLastAccessedTime() == 0) {
      slv_manager_add_user($account->id(), $entity->id());
      $response = new RedirectResponse(Url::fromRoute('slv_manager.voter_welcome')
        ->toString(), 302);
      $response->send();
      return;
    }
    //@todo check the voters and other roles separately
    else {
      if (!empty($entity)) {
        //slv_manager_add_user($account->id(), $entity->id());
        $response = new RedirectResponse(Url::fromRoute('slv_manager.voter_details', array('slv_manager_voter' => $entity->id()))
          ->toString(), 302);
        $response->send();
      }
    }
    return;
  }
}

function slv_manager_load_voter_by_nic($nic){
  $entities = entity_load_multiple_by_properties('slv_manager_voter', array('nic' => $nic['value']));
  return reset($entities);
}

function slv_manager_get_polling_booth($uid){
  $entities = entity_load_multiple_by_properties('slv_manager_voter', array('user_id' => $uid));
  $entity = reset($entities);
  $pollingBooth = $entity->get('polling_booth')->getValue()[0]['value'];
  return $pollingBooth;
}

function slv_manager_get_district($uid){
  $entities = entity_load_multiple_by_properties('slv_manager_voter', array('user_id' => $uid));
  $entity = reset($entities);
  $district = $entity->get('district')->getValue()[0]['value'];
  return $district;
}

function slv_manager_add_user($uid, $voter_id){
  /* @var $voter \Drupal\slv_manager\Entity\Voter */
  $voter = entity_load('slv_manager_voter', $voter_id);
  $voter->set('user_id', $uid);
  $voter->save();

}

function slv_manager_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  // (Example assuming a view with an exposed filter on node title.)
  // If the input for the title filter is a positive integer, filter against
  // node ID instead of node title.
  if ($view->id() == 'voter_view') {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      foreach ($condition_group ['conditions'] as &$condition) {
        // If this is the part of the query filtering on title, chang the
        // condition to filter on node ID.
        if ($condition ['field'] == 'slv_manager_voter__polling_booth.polling_booth_value') {
          $condition = array(
            'field' => 'slv_manager_voter__polling_booth.polling_booth_value',
            'value' => slv_manager_get_polling_booth(Drupal::currentUser()->id()),
            'operator' => '=',
          );
        }
      }
    }
  }
}
